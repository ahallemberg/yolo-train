#!/bin/bash
export PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"

create_venv=false
tuning=false
reset=false

help (){
    echo "Usage: train [OPTIONS]"
    echo "Options:"
    echo "  -v, --venv   Create a virtual environment"
    echo "  -t, --tune   Tune the model"
    echo "  -r, --reset  Reset the parameters to default"
    exit 1
}

get_options(){
  TEMP=$(getopt -o vrt --long venv,tune,reset -n 'train' -- "$@")
  if [ $? != 0 ]; then echo "Terminating..." >&2; exit 1; fi

    eval set -- "$TEMP"

    while true; do
        case "$1" in
            -v|--venv)
                create_venv=true
                shift
                ;;
            -r|--reset)
                reset=true
                shift
                ;;
            -t|--tune)
                tuning=true
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                help
                ;;
        esac
    done
}

get_options "$@"

if [ "$reset" = true ]; then
    echo "Resetting parameters to default..."
    cp "${PROJECT_DIR}/.default/train.yaml" "${PROJECT_DIR}/config/train.yaml"
    cp "${PROJECT_DIR}/.default/tune.yaml" "${PROJECT_DIR}/config/tune.yaml"
    cp "${PROJECT_DIR}/.default/data.yaml" "${PROJECT_DIR}/datasets/data.yaml"
    exit
fi

export CREATE_VENV=$create_venv 

if [ "$tuning" = true ]; then
    export TASK=tune
else
    export TASK=train
fi

echo "Create venv:" $CREATE_VENV
echo "Task:" $TASK

trap "source ${PROJECT_DIR}/src/cleanup_env.sh" EXIT

source "${PROJECT_DIR}/src/setup_env.sh"
python3 "${PROJECT_DIR}/src/train.py"
source "${PROJECT_DIR}/src/cleanup_env.sh"